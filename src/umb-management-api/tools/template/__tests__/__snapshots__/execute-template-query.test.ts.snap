// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`execute-template-query should execute a simple template query 1`] = `
{
  "content": [
    {
      "text": "{"queryExpression":"Umbraco.ContentAtRoot().FirstOrDefault()\\n    .Children()\\n    .Where(x => x.IsVisible())\\n    .Take(10)","sampleResults":[],"resultCount":0,"executionTime":0}",
      "type": "text",
    },
  ],
}
`;

exports[`execute-template-query should execute a template query with document type filter 1`] = `
{
  "content": [
    {
      "text": "{"queryExpression":"Umbraco.ContentAtRoot().FirstOrDefault()\\n    .ChildrenOfType(\\"contentPage\\")\\n    .Where(x => x.IsVisible())\\n    .Take(5)","sampleResults":[],"resultCount":0,"executionTime":0}",
      "type": "text",
    },
  ],
}
`;

exports[`execute-template-query should execute a template query with filters and sorting 1`] = `
{
  "content": [
    {
      "text": "{"queryExpression":"Umbraco.ContentAtRoot().FirstOrDefault()\\n    .Children()\\n    .Where(x => x.IsVisible())\\n    .OrderByDescending(x => x.createDate)\\n    .Take(10)","sampleResults":[],"resultCount":0,"executionTime":0}",
      "type": "text",
    },
  ],
}
`;

exports[`execute-template-query should handle invalid query gracefully 1`] = `
{
  "content": [
    {
      "text": "{"queryExpression":"Umbraco.ContentAtRoot().FirstOrDefault()\\n    .ChildrenOfType(\\"nonExistentType\\")\\n    .Where(x => x.IsVisible())\\n    .Take(10)","sampleResults":[],"resultCount":0,"executionTime":0}",
      "type": "text",
    },
  ],
}
`;
