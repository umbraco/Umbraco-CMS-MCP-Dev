trigger:
  branches:
    include:
    - main
    - feature/*

pool:
  vmImage: 'ubuntu-latest'

variables:
  - name: nodeVersion
    value: '22.x'

stages:
- stage: BuildAndTest
  displayName: 'Build'
  jobs:
  - job: Build
    displayName: 'Build Package'
    steps:
    - task: NodeTool@0
      displayName: 'Use Node.js $(nodeVersion)'
      inputs:
        versionSpec: '$(nodeVersion)'
    
    - task: Cache@2
      displayName: 'Cache node_modules'
      inputs:
        key: 'npm | "$(Agent.OS)" | package-lock.json'
        restoreKeys: |
          npm | "$(Agent.OS)"
          npm
        path: 'node_modules'
    
    - script: npm ci
      displayName: 'Install dependencies'
    
    - script: npm run build
      displayName: 'Build TypeScript'
    
    - script: npm pack --pack-destination $(Build.ArtifactStagingDirectory)
      displayName: 'Create NPM package'
    
    - task: PublishPipelineArtifact@1
      displayName: 'Publish NPM package to artifacts'
      inputs:
        targetPath: '$(Build.ArtifactStagingDirectory)'
        artifact: 'npm-package'

- stage: Deploy_Npm
  displayName: Npm release
  condition: and(succeeded(), eq(variables['Build.SourceBranch'], 'refs/heads/main'))
  dependsOn:
    - BuildAndTest
  jobs:
    - job: Publish
      displayName: Push to NPM
      steps:
        - checkout: none
        - download: current
          artifact: 'npm-package'
        - bash: echo "@umbraco-cms:registry=https://registry.npmjs.org" >> .npmrc
          workingDirectory: $(Pipeline.Workspace)/npm-package
          displayName: Add scoped registry to .npmrc
        - task: npmAuthenticate@0
          displayName: Authenticate with npm
          inputs:
            workingFile: $(Pipeline.Workspace)/npm-package/.npmrc
            customEndpoint: "NPM - Umbraco Backoffice"
        - script: |
            # Setup temp npm project to load in defaults from the local .npmrc
            npm init -y

            # Find the first .tgz file in the current directory and publish it
            files=( ./*.tgz )
            npm publish "${files[0]}"
          displayName: Push to npm
          workingDirectory: $(Pipeline.Workspace)/npm-package